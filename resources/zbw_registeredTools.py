# dictionaries of tools registered for zTools 
# used to call from zTools using zTools.zAction, zTools.zMelAction
# value = [module, function] for python, [procedure] for mel

zRigDict = {
    "attr": ["zTools.rig.zbw_attributes", "attributes"],
    "snap": ["zTools.rig.zbw_snap", "snap"],
    "shpScl": ["zTools.rig.zbw_shapeScale", "shapeScale"],
    "selBuf": ["zTools.rig.zbw_selectionBuffer", "selectionBuffer"],
    "smIK": ["zTools.rig.zbw_smallIKStretch", "smallIKStretch"],
    "foll": ["zTools.rig.zbw_makeFollicle", "makeFollicle"],
    "ribbon": ["zTools.rig.zbw_ribbon", "ribbon"],
    "softMod": ["zTools.rig.zbw_softDeformer", "softDeformer"],
    "jntRadius": ["zTools.rig.zbw_jointRadius", "jointRadius"],
    "cmtRename": ["cometRename"],
    "trfmBuffer": ["zTools.rig.zbw_transformBuffer", "transformBuffer"],
    "crvTools": ["zTools.rig.zbw_curveTools", "curveTools"],
    "abSym": ['abSymMesh'],
    "cmtJntOrnt": ["cometJointOrient"],
    "autoSquash": ["zTools.rig.zbw_autoSquashRig", "autoSquashRig"],
    "BSpirit": ["BSpiritCorrectiveShape"],
    "follow": ["zTools.rig.zbw_followConstraints", "followConstraints"],
    "splineIK": ["zTools.rig.zbw_splineRig", "splineRig"],
    "leg": ["zTools.rig.zbw_rigger_legRig",  "LegRigUI"],
    "arm": ["zTools.rig.zbw_rigger_armRig", "ArmRigUI"],
    "typFind": ["zTools.rig.zbw_typeFinder", "typeFinder"],
    "wire": ["zTools.rig.zbw_wireRig", "wireRig"],
    "eyelidRig": ["zTools.rig.zbw_eyelidRig", "EyelidRigUI"],
    "softJoint": ["zTools.rig.zbw_softSelectionToJoint", "softSelectionToJoint"],
    "ikfkSpine":["zTools.rig.zbw_ikfkSpine", "IkFkRig"],
    "handRig":["zTools.rig.zbw_hand_rig", "HandRig"],
    "faceCtrl":["zTools.rig.zbw_faceControlTemplate", "face_ctrl_setup"], 
    "proxyGeo":["zTools.rig.zbw_createProxyGeo", "CreateProxyGeo"],
    "poseReader":["zTools.rig.zbw_poseReader", "PoseReader"],
    "dupeBlends":["zTools.rig.zbw_dupeBlends", "dupeBlends"],
    "animPolish":["js_animPolish.js_animPolish_ui", "ui"],
}

zAnimDict = {
    "tween": ["zTools.anim.tweenMachine", "start"],
    "noise": ["zTools.anim.zbw_animNoise", "animNoise"],
    "audio": ["zTools.anim.zbw_audioManager", "audioManager"],
    "clean": ["zTools.anim.zbw_cleanKeys", "cleanKeys"],
    "dupe": ["zTools.anim.zbw_dupeSwap", "dupeSwap"],
    "huddle": ["zTools.anim.zbw_huddle", "huddle"],
    "randomSel": ["zTools.anim.zbw_randomSelection","randomSelection"],
    "randomAttr": ["zTools.anim.zbw_randomAttrs", "randomAttrs"],
    "clip": ["zTools.anim.zbw_setClipPlanes", "setClipPlanes"],
    "tangents": ["zTools.anim.zbw_tangents", "tangents"],
    "studioLib": ["studiolibrary", "main"], 
    "animBot": ["animBot", "welcome"],
    "pulldown": ["zTools.anim.zbw_animPullDown", "animPullDown"],
}

zModelDict = {
    "extend": ["zTools.model.zbw_polyExtend","polyExtend"],
    "wrinkle": ["zTools.model.zbw_wrinklePoly", "wrinklePoly"]
}

zShdDict = {
    "shdTransfer": ["zTools.shaderRender.zbw_shadingTransfer", "shadingTransfer"],
    "prvsShd": ["zTools.shaderRender.zbw_previsShaders", "previsShaders"],
    "shdSave": ["zTools.shaderRender.zbw_shaderSaver", "shaderSaver"],
}


zAnnDict = {
    "createCtrl":"Creates a ctrl at origin of the specified shape based on chosen axis",
    "swap":"Changes selected ctrl(s) shape nodes to the chosen shape",
    "grpFrz":"Creates a group above the currect selection(s)-->name + '_GRP'",
    "selHier":"Selects all specified objs BELOW current selection(s)",
    "grpFrzCnt":"Select Ctrl obj, then joints(s). Puts a group frozen ctrl at each joint and replicates the joint hierarchy in the ctrls",
    "prntChn":"Select last to first, this will parent then in reverse order",
    "shpVis":"Toggles the visibility of the selected shape node(s)",
    "bBox":"Creates a ctrl based on the corners of the bounding box of ALL selected objs and parents those to the ctrl",
    "copySkin":"Select the bound geo, then the unbound geo. This selects all joints in the skin cluster, binds the new geo to them, then copies skin weights from bound",
    "namespace":"Removes ALL namespaces. Use with care!",
    "selVtxJnt":"Puts a joint at the center of all selected verts. Does NOT bind anything",
    "snap":"Snaps last selected to first selected",
    "constraint":"Just a quick way to create ordinary constraints and combinations of constraints",
    "pivot":"A quick way to snap pivots of selected obj(s)",
    "cleanJnts":"From jnt selected down hier, removes rotation on joints, allowing them to be oriented",
    "create":"Creates chosen stuff: zeroed objs sit of the origin with pivots at origin, sets and display layers are created from selection, joints and locators are created at origin (as per usual)",
    "softSelJnt":"Creates a joint and weights from soft selection weighting",
    "showHide":"A quick way to get to certain states in the SHOW viewport menu",
    "selBind":"Selects the joints in the skin cluster associated with selected geo", 
    "zeroXform":"Returns selected obj(s) to 0 in rot, transl and 1 in scale", 
    "bsToAttr":"Select the BS node, then the obj to apply to. This creates an attr on the obj for each target shape and connects the attr to the target", 
    "faceCtrl":"Useful for facial ctrls driving blendshapes. Select a ctrl and click. This limits the control in transl x, y, z to 1. There is also an attr that multiplies the x, y, z so that a larger or smaller limit can output any desired range. Connect the XPosOut, XNegOut, etc attr to your blendshapes (or whatever)", 
    "negate":"For selected obj(s) this creates a group above that negates all transformations on obj. This is useful for sticking ctrls on driven surfaces", 
    "dupeBlend":"Select the blendshape node(s), then the geo to duplicate. This fires each target shape in turn on makes a copy of the geo with the blendshape fired. Useful for tranferring BS's to wrapped geo with different geometry",
    "rotateOrder":"Select the ctrl, then any objects you want to connect to. This will add enum attr for rot order and connect to ctrl and objects",

    "delHis":"Delete history on all selected",
    "delNDHis":"Delete non-deformer history on all selected",
    "delAnim":"Delete animation (only timeline anim, not sdks)",
    "freeze":"Freeze transforms on translate, rotate, scale or all",
    "crvThk":"Adjust the viewport thickness of selected curves",
    "jntDrw":"Draw joints in viewport or not",
    "jntSz":"Adjust viewport size of ALL joints",
    "lra":"Turn on/off local rotational axes for all selected",
    "lock":"Locks or unlock selected nodes (note: this doesn't un/lock channels, just nodes)",
    "tips":"Turn tooltips on/off (note: this is global, not just for this tool)",

    "color":"Sets the obj(s)' shape color",

    "attrs":"zbw_attributes - for locking, hiding, connecting, creating, etc attributes",
    "shpScl":"zbw_shapeScale - for interactively scaling shape nodes (not transforms)",
    "selBuf":"zbw_selectionBuffer - for storing/restoring selections",
    "zSnap":"zbw_snap - for more controlled snapping of xforms and pivots",
    "fol":"zbw_follicle - for creating follicles on selected components",
    "jntRad":"zbw_jointRadius - for more controlled joint radius changes",
    "typeFinder":"zbw_typeFinder - (not finished) for finding nodes of any type",
    "proxy":"zbw_createProxyGeo - for creating/binding simple proxy geometry to joints",
    "pose":"zbw_poseReader - creates a 4-way, sphere-based pose reader",
    "rename":"cometRename - via Michael Comet",
    "jntOrient":"cometJointOrient - via Michael Comet",
    "animPolish":"js_animPolish - via Josh Sobel (not included)",

    "softDef":"For creating soft mod deformers parented under a control",
    "crvTools":"Some curve related tools from an old project",
    "singleIK":"For creating a two joint stretchy rig",
    "squash":"For creating a simple rig that squashes",
    "wireDef":"(not really for use)",
    "legRig":"For creating leg rigs",
    "armRig":"For creating arm rigs",
    "spine":"For creating ikFk spine rigs",
    "hand":"For creating hand rig",
    "eye":"For creating eye rig",
    "ribbon":"For creating nurbs ribbon rigs",
    "spline":"For creating ik spline rigs",
    "followCnstr":"For creating setup for switching constraints",

    "xformBuffer":"zbw_transformBuffer - just catches and sets xform values (similar to what maya has now, in match transforms)",
    "rndSel":"zbw_randomSelection - allows to deselect a random amount from a selection",
    "wrinkle":"some crap from an old job, messes with vertex selection in a bunch of silly ways",
    "shdTransfer":"zbw_transferShader - transfers shaders and uvs from a selection to another selection",
    "previsShd":"a strange experiment for laying out shaders quickly in a huge scene",

    "tween":"tweenMachine via Justin Barrett",
    "animNoise":"zbw_animNoise - for adding randomish noise into anim curves",
    "audio":"zbw_audioManager - for importing and offsetting audio stuff, pretty old",
    "clean":"zbw_cleanKeys - cleans unnecessary keys",
    "dupeSwap":"zbw_dupeSwap - swaps one obj in for multiple other objs",
    "huddle":"zbw_huddle - occasionally useful for pulling/pushing objs relative to another obj",
    "pulldown":"zbw_animPullDown - for transferring animation from a master control to ik controls, useful in moving blocking/previs to anim",
    "rndAttr":"zbw_randomAttr - set random values on attributes",
    "clip":"zbw_setClipPlanes - change clipping plane vals on one or all cameras",
    "tangents":"zbw_tangents - change some or all tangents based on various attributes",
    "studioLib":"studioLibrary via ?, not included",
    "animBot": "animBot via ?, not included",

    "saveScript":"saves contents of script window",
    "windows":"cleans up windows when lost via losing a monitor or something like that"
}